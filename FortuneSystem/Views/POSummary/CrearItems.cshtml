@model FortuneSystem.Models.POSummary.POSummary

@{
	ViewBag.Title = "CrearItems";

}

<link rel="stylesheet" href="~/Content/alertifyjs/css/alertify.min.css" />
<link rel="stylesheet" href="~/Content/alertifyjs/css/themes/default.min.css" />
<link href="~/Content/select2-4.0.5/dist/css/select2.min.css" rel="stylesheet" />
<script src="~/Content/alertifyjs/alertify.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js"></script>
<script src="~/Scripts/bootstrap.min.js"></script>
<link href="~/Content/bootstrap.min.css" rel="stylesheet" />
<link href="~/Content/select2-4.0.5/dist/css/select2.min.css" rel="stylesheet" />
<script src="~/Content/select2-4.0.5/dist/js/select2.min.js"></script>
<script language="javascript" type="text/javascript" src="http://ajax.aspnetcdn.com/ajax/jquery.validate/1.10.0/jquery.validate.min.js"></script>
<script src="~/Scripts/general/autocomplete.js"></script>
<script src="~/Scripts/general/AgregarTallas.js"></script>
<link type="text/css" rel="stylesheet" href="~/Content/cssGeneral/estiloArte.css" />
<script src="~/Content/dropzone/dist/min/dropzone.min.js"></script>
<link rel="stylesheet" href="~/Content/dropzone/dist/min/dropzone.min.css" />


<link href="@Url.Content("~/Content/themes/base/jquery-ui.min.css")" rel="stylesheet" />
@Scripts.Render("~/Content/jquery-ui-1.12.1.custom/jquery-3.3.1.min.js")

<script type="text/javascript">


    $(document).ready(function () {
        $("#selectEspecialidad").val('12');
		$("#selectEspecialidad").trigger('change');

		  $("#selectFormPack").val('1');
        $("#selectFormPack").trigger('change');

        var estilo = $("#ItemDescripcion_ItemEstilo").val();
		if (estilo != '') {
			$('#ItemDescripcion_Descripcion').val('');
			$("#nuevoEstilo").prop("disabled", false);
			validarEstilo(estilo);

		}

            $('#nuevoColor').click(function (e) {
        var colorEstilo = $("#CatColores_CodigoColor").val();
        var colorDesc = $("#CatColores_DescripcionColor").val();
        $.ajax('@Url.Action("Registrarcolor", "Colores")', {
            data: { CodigoColor: colorEstilo, DescColor: colorDesc },
            method: 'post'
        }).done(function (data) {        });
				$("#nuevoColor").prop("disabled", true);
				$("#nuevoColor").removeClass("btn btn-danger");
			$("#nuevoColor").addClass("btn btn-success");
        alertify.set('notifier', 'position', 'top-right');
                alertify.notify('The color was registered correctly.', 'success', 10, null);
        });

        $('#nuevoEstilo').click(function (e) {
        var itemEstilo = $("#ItemDescripcion_ItemEstilo").val();
        var estiloDesc = $("#ItemDescripcion_Descripcion").val();
        $.ajax('@Url.Action("RegistrarEstilo", "Items")', {
            data: { ItemEstilo: itemEstilo, DescEstilo: estiloDesc },
            method: 'post'
        }).done(function (data) {
        });
			$("#nuevoEstilo").prop("disabled", true);
			$("#nuevoEstilo").removeClass("btn btn-danger");
			$("#nuevoEstilo").addClass("btn btn-success");
            alertify.set('notifier', 'position', 'top-right');
            alertify.notify('The description of the style was correctly registered.', 'success', 10, null);
        });

        @*$('#btnSaveArt').click(function (e) {
            debugger

            var data = new FormData();
            var files = $("#chooseFile").get(0).files;

            if (files.length > 0) { data.append("HelpSectionImages", files[0]); }
            else {
                common.showNotification('warning', 'Please select file to upload.', 'top', 'right');
                return false;
            }
            var extension = $("#chooseFile").val().split('.').pop().toUpperCase();
            if (extension != "PNG" && extension != "JPG" && extension != "GIF" && extension != "JPEG") {
                common.showNotification('warning', 'Imvalid image file format.', 'top', 'right');
                return false;
            }
        $.ajax('@Url.Action("FileUpload", "POSummary")', {
            data: data,
            type: 'post'
        }).done(function (data) {
                });
            $('#agregarImgModal').modal('hide');
        });*@

        $('#btnSaveArt').click(function () {

                 if (window.FormData !== undefined) {

                    var fileUpload = $("#chooseFile").get(0);
                    var files = fileUpload.files;
                    var fileData = new FormData();

                    for (var i = 0; i < files.length; i++) {
                        fileData.append(files[i].name, files[i]);
                    }

                    $.ajax({
                        url: '/Arte/UploadFiles',
                        type: "POST",
                        contentType: false,
                        processData: false,
                        data: fileData,
                        success: function (result) {
                            alert(result);
                        },
                        error: function (err) {
                            alert(err.statusText);
                        }
                    });
                } else {
                    alert("FormData is not supported.");
                }
            });


        $("#ItemDescripcion_ItemEstilo,#CatColores_CodigoColor,#f-talla").on('input', function () {
            var val = this.value;
            this.value = val.replace(/[^A-Z\a-z\u00f1\u00d1\u0020\s\^0-9]/g, '');
        });
       /* $("#Cantidad").on('input', function () {
            var val = this.value;
            this.value = val.replace(/^[0-9]\./g, '');
        });*/

        $("#crearTallas").hide();
       // $("#crearTipoPack").hide();
        debugger
        $('#nuevoItem').click(function (e) {
            var error = 0;
            var lista = [];
            lista = obtenerPackingEstilo();
            var datos = JSON.stringify(lista);
            var obj = datos;
            obj = JSON.parse(obj);
            $(".nuevo_item").each(function () {
                error;
                var id = $(this).attr('id');
                var result = $(this).val();
                if (result == '') {
                    $("#" + id).css('border', '2px solid #e03f3f');
                    error++;

                } else {
                    $("#" + id).css('border', '1px solid #cccccc');
                }

            });
            if (error != 0) {
                var alert = alertify.alert("Message", 'All fields are required.').set('label', 'Aceptar');
                alert.set({ transition: 'zoom' });
                alert.set('modal', false);
            } else {
                $("#nuevoItem").prop("disabled", true);
				$("#crearTallas").show();
				 deshabilitarForm();
              //  $("#crearTipoPack").show();
                var EstiloItem = $("#ItemDescripcion_ItemEstilo").val();
                var IdColor = $("#CatColores_CodigoColor").val();
                var Cantidad = $("#CantidadT").val();
                var Precio = $("#Precio").val();
                var IdGenero = $("#selectGenero option:selected").val();
                var IdTela = $("#selectTela option:selected").val();
                var TipoCamiseta = $("#selectTipoCamiseta option:selected").val();
				var Especialidad = $("#selectEspecialidad option:selected").val();
				var TipoFormaPack = $("#selectFormPack option:selected").val();

                //var data1 = [{ "EstiloItem": EstiloItem, "IdColor": IdColor, "Cantidad": Cantidad, "Precio": Precio, "IdGenero": IdGenero, "TipoCamiseta": TipoCamiseta, "IdTela": IdTela, "IdEspecialidad": Especialidad, "ListaPackSytle": lista }];
				$.ajax('@Url.Action("RegistrarItem", "POSummary")', {
					data: { EstiloItem: EstiloItem, IdColor: IdColor, Cantidad: Cantidad, Precio: Precio, IdGenero: IdGenero, TipoCamiseta: TipoCamiseta, IdTela: IdTela, IdEspecialidad: Especialidad, ListaPackSytle: obj, IdTipoFormPack: TipoFormaPack },
                    type: "POST",
                    async: true,
                    dataType: "json",
                success: function (data) {

                },
            }).done(function(data) {

                    });

                var arteImg = '@Session["IdArte"]';
                if (arteImg === "") {
                    $("#loading").css('display', 'none');
                    var id = $(this).data("value");
                    $('#agregarImgModal').modal('show');
                    $("#ContenedorModal").load("/Cliente/Detalles/" + id, function () {
                    });
                } else {

                }
                alertify.set('notifier', 'position', 'top-right');
                alertify.notify('The Style was registered correctly.', 'success', 10, null);

            }


        });

        function obtenerPackingEstilo() {
            var r = 0; var c = 0; var i = 0; var cadena = new Array(1);
            cadena[0] = '';
            var nFilas = $("#tablaPack tbody>tr").length;
            var nColumnas = $("#tablaPack tr:last td").length;
            $('#tablaPack tbody>tr').each(function () {
                r = 0;
                c = 0;
                $(this).find("input").each(function () {
                    $(this).closest('td').find("input").each(function () {
                        cadena[c] += this.value + "*";
                        c++;
                    });

                    r++;
                });
            });

            var error = 0;
            $('#tablaPack').find('td.datoPack').each(function (i, el) {

                var valor = $(el).children().val();

                if ($(el).children().val() == '') {
                    error++;
                    $(el).children().css('border', '2px solid #e03f3f');

                } else {
                    $(el).children().css('border', '1px solid #cccccc');

                }
            });

            if (error == 0) {
                return (cadena);
            }

        }

        var colorDesc = $("#CatColores_DescripcionColor").val();
        var colorEstilo = $("#CatColores_CodigoColor").val();
        $(function () {
            var list_datalist = Array();
            $.ajax({
                url: '/Tallas/Lista_Tallas',
                type: 'GET',
                success: function (data) {
                    for (var i = 0; i < data.length; i++) {
                        var html = "";
                        list_datalist.push(data[i].Talla);
                    }
                }
            })
            var availableTags = list_datalist;
            $(document).on("focus keyup", "input.talla", function (event) {

                $(this).autocomplete({
                    source: availableTags,
                    select: function (event, ui) {
                        event.preventDefault();
                        this.value = ui.item.label;
                    },
                    focus: function (event, ui) {
                        event.preventDefault();
                        this.value = ui.item.label;
                    }
                });
            });
        });

        $(function () {
            $('#selectGenero').change(function () {
                var text = $(this).find('option:selected').text();
                $.ajax('@Url.Action("List", "POSummary")', {
                data: { Genero: text},
                    method: 'GET',
                    success: function (result) {
						var html = '';
						var cont = 0;
                        $.each(result, function (key, item) {
                            html += '<tr>';
                            html += '<td class="mover"><span class="glyphicon glyphicon-fullscreen" aria-hidden="true"></span></td>';
                            html += '<td class="datoTalla"><input type="text" id="f-talla" class="form-control talla" value="' + item.CatTallaItem.Talla + '"/></td>';
                            html += '<td class="datoTalla"><input type="text" name="l-cantidad" id="l-cantidad'+cont+'" class="form-control l-name01 numCantTall "  onblur="sumar(' + cont + ')" /></td>';
                            html += '<td class="datoTalla"><input type="text" name="e-extras" id="e-extras" class="form-control e-name01 numExtTall" value="' + 0 + '"/></td>';
                            html += '<td class="datoTalla"><input type="text" name="s-ejemplo" id="s-ejemplo'+cont+'" class="form-control s-name01 numEjmTall"  onblur="sumarEjemplo(' + cont + ')"  value="' + 0 + '"/></td>';
                            html += '<td><button type="button" id="btnDelete" class="deleteTalla btn btn btn-danger btn-xs" value="4">Delete</button></td>';
                            html += '</tr>';
							cont++;
                        });
                        $('.tbodyTallas').html(html);
                    },
                    error: function (errormessage) {
                        alert(errormessage.responseText);
                    },
            }).done(function(data) {

            });
            });
        });

        var exists = false;


	});



    function buscarTipoCamiseta(tipoProd) {
        $('#selectTipoCamiseta option').each(function (i, e) {
            if (this.value == tipoProd) {
                    $(this).attr('selected', 'selected');
                $(this).val(tipoProd).change();

                }
            });
    }

    function buscarGenero(genero) {
        $('#selectGenero option').each(function (i, e) {
            if (this.value == genero) {
                $(this).attr('selected', 'selected');
                $(this).val(genero).change();

            }
        });
    }

    function validarEstilo(estilo) {
        const re = /^([A-Z]{4})([0-9A-Z]{3})([A-Z]{1})([A-Z]{2})/;
        var validar = estilo.match(re);
        if (validar != null) {
            var licencia = validar[1];
            var genero = validar[3];
            var tipoProd = validar[4];
        }
        var numero;
        if (!validar) {
            numero = 0;
            return numero;
        } else {
            numero = 1;
            buscarTipoCamiseta(tipoProd);
            buscarGenero(genero);
            return numero;

        }


    }

    $(function () {
        $('#chooseFile').bind('change', function () {
            var filename = $("#chooseFile").val();
            if (/^\s*$/.test(filename)) {
                $(".file-upload").removeClass('active');
                $("#noFile").text("No file chosen...");
            }
            else {
                $(".file-upload").addClass('active');
                $("#noFile").text(filename.replace("C:\\fakepath\\", ""));
            }
        });
    });

	$(function () {//chooseFile
		debugger
        $('#chooseFile').change(function (e) {
            addImage(e);
        });

        function addImage(e) {
            var file = e.target.files[0],
                imageType = /image.*/;

            if (!file.type.match(imageType))
                return;

            var reader = new FileReader();
            reader.onload = fileOnload;
            reader.readAsDataURL(file);
        }

        function fileOnload(e) {
            var result = e.target.result;
            $('#imgSalida').attr("src", result);
        }
    });

    function InputToUpper(obj) {
        if (obj.value != "") {
            obj.value = obj.value.toUpperCase();
        }
    }

    $(document).ready(function () {
        $('#nuevaTalla').on('click', function () {
            var r = 0; var c = 0; var i = 0; var cadena = new Array(4);
            cadena[0] = ''; cadena[1] = ''; cadena[2] = ''; cadena[3] = '';
            var nFilas = $("#tablaTallas tbody>tr").length;
            var nColumnas = $("#tablaTallas tr:last td").length;
            $('#tablaTallas tbody>tr').each(function () {
                r = 0;
                c = 0;
                $(this).find("input").each(function () {
                    $(this).closest('td').find("input").each(function () {
                        cadena[c] += this.value + "*" ;
                        c++;
                    });

                    r++;
                    });
                });

            var error = 0;
            $('#tablaTallas').find('td.datoTalla').each(function (i, el) {

                var valor = $(el).children().val();

                    if ($(el).children().val() == '') {
                        error++;
                        $(el).children().css('border', '2px solid #e03f3f');

                    } else {
                        $(el).children().css('border', '1px solid #cccccc');

                    }
            });

            enviarListaTalla(cadena, error);
        });
    });

    function redireccionarPagina() {
        $("#loading").css('display', 'inline');
        window.location = '/pedidos/Index';
    }
    function enviarListaTalla(cadena, error) {

        if (error != 0) {
            var alert = alertify.alert("Message", 'All fields are required.').set('label', 'Aceptar');
            alert.set({ transition: 'zoom' });
            alert.set('modal', false);
        } else {
            $.ajax({
                url: "/POSummary/Obtener_Lista_Tallas",
                datatType: 'json',
                data: JSON.stringify({ ListTalla: cadena }),
                cache: false,
                type: 'POST',
                contentType: 'application/json',
                success: function (data) {
                    alertify.set('notifier', 'position', 'top-right');
                    alertify.notify('The sizes were correctly registered.', 'success', 5, null);
                    var confirm = alertify.confirm('Confirmation', 'Do you want to register a new Style?', null, null).set('labels', { ok: 'Aceptar', cancel: 'Cancelar' });

                    confirm.set({ transition: 'slide' });

                    confirm.set('onok', function () {
                        $("#crearTallas").hide();
                       // $("#crearTipoPack").hide();
                        $('#nuevoItem').prop("disabled", false);
                        limpiarFormItems();
                        alertify.success('Confirmation Accepted');
                    });

                    confirm.set('oncancel', function () {
                        alertify.notify('The purchase order record was finalized.','success', 5, null);
                        setTimeout("redireccionarPagina()", 800);
                        $("#loading").css('display', 'none');
                    });
                }
            });
        }

    }

    function limpiarFormItems() {
        $('#ItemDescripcion_ItemEstilo').val('');
        $('#ItemDescripcion_Descripcion').val('');
        $('#CatColores_CodigoColor').val('');
        $('#CatColores_DescripcionColor').val('');
        $('#CantidadT').val('');
        $("#nuevoColor").prop("disabled", false);
        $("#nuevoEstilo").prop("disabled", false);
        limpiarInptCant();
        limpiarInptExt();
		limpiarInptEjm();
		$(".pack").prop('disabled', false);
		$("#btnAddPack").prop('disabled', false);
		$(".packDelete").prop('disabled', false);
		$(".pack").val('');

	}

	    function deshabilitarForm() {
		$(".pack").prop('disabled', true);
		$("#btnAddPack").prop('disabled', true);
		$(".packDelete").prop('disabled', true);

    }

    function limpiarInptCant() {
        $(".numCantTall").each(function () {
            $(this).val('');
        });
    }

    function limpiarInptExt() {
        $(".numExtTall").each(function () {
            $(this).val('0');
        });
    }

    function limpiarInptEjm() {
        $(".numEjmTall").each(function () {
            $(this).val('0');
        });
    }
    //Sumar cantidades
    var rep;
    document.addEventListener("blur", function (event) {
        var val = document.getElementById("CantidadT").value;
        if (val !== "") {
            rep = eval(val);
            document.getElementById("CantidadT").value = rep;
        }
	}, true);


	function sumar(index) {
		$(".numCantTall").each(
			function (index, value) {
				var resp;
				document.addEventListener("blur", function (event) {
					debugger
					var valor = "l-cantidad" + index;
					var val = document.getElementById(valor).value;
					if (val !== "") {
						resp = eval(val);
						document.getElementById(valor).value = resp;
					}
				}, true);
			}
		);
	}

		function sumarEjemplo(index) {
		$(".numEjmTall").each(
			function (index, value) {
				var resp;
				document.addEventListener("blur", function (event) {
					debugger
					var valor = "s-ejemplo" + index;
					var val = document.getElementById(valor).value;
					if (val !== "") {
						resp = eval(val);
						document.getElementById(valor).value = resp;
					}
				}, true);
			}
		);
	}

    $(document).ready(function () {
        $('.tbodyTallas').sortable();
    });

    $(document).ready(function () {
        $('.tbodyPack').sortable();
	});

	Dropzone.options.dropzoneForm =
		{
			init: function () {
				this.on("complete", function (data) {
					//var res = eval('(' + data.xhr.responseText + ')');
					var res = JSON.parse(data.xhr.responseText);
				});
			}
		};

</script>

<style>
	.classTipoPack {
		color: white !important;
		background: #709ec5 !important;
	}

	body .editar {
		width: 120% !important;
		margin-left: -20% !important;
	}

	body {
		font-family: arial;
	}

	#drop-container {
		background: #ffffff;
		min-height: 200px;
		padding: 10px;
		border: #07c6f1 2px dashed;
		max-width: 600px;
	}

	.drop-area-text {
		text-align: center;
		color: #e0dfdf;
		font-size: 1.5em;
		padding-bottom: 20px;
	}

	.drop-image {
		display: none;
	}

	.preview {
		margin: 20px;
		width: 150px;
		height: 150px;
		display: inline-block;
	}

	@@media screen and (max-width: 500px) {
		.preview {
			margin: 15px;
			width: 100px;
			height: 100px;
		}
	}
</style>

<h2></h2>
<div class="modal fade" id="agregarImgModal" tabindex="-1" role="dialog" data-backdrop="static" data-keyboard="false" aria-labelledby="agregarImgModal" style="width: 110% !important">
	<div class="modal-dialog modal-lg">
		<div class="modal-content editar">
			<div class="modal-header">
				<h2 class="modal-title" id="exampleModalLabel">ADD ART IMAGE</h2>
			</div>
			<div class="modal-body">
				@*<div class="jumbotron">
						<form action="~/POSummary/Upload"  style="background-color:#00BFFF"></form>
						<button id="submit-all">Submit All Files</button>
					</div>*@
				<div class="form-horizontal">
					<div class="row">
						<div class="form-group">
							<div class="col-sm-1">
							</div>
							<div class="col-sm-5">
								<div id="drop-container">
									<div class="drop-area-text">Drag and Drop Images Here</div>
								</div>
								<img src="" class="drop-image" />
							</div>
						</div>
					</div>

				</div>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
			</div>
		</div>
	</div>
</div>

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "formItems" }))
{
	@Html.AntiForgeryToken()


	<div class="form-horizontal">
		@Html.ValidationSummary(true, "", new { @class = "text-danger" })
		@Html.HiddenFor(model => model.IdItems)
		@Html.HiddenFor(model => model.IdColor)
		<div class="panel panel-primary">
			<div class="panel-heading">
				<h4>
					Reception of styles
				</h4>
			</div>
			<div class="container-fluid">
				<br />
				<div class="form-row ">
					<div class="form-group col-md-4">
						@Html.LabelFor(model => model.ItemDescripcion.ItemEstilo, htmlAttributes: new { @class = "control-label" })
						@Html.EditorFor(model => model.ItemDescripcion.ItemEstilo, new { htmlAttributes = new { @class = "form-control nuevo_item", @onkeyup = "InputToUpper(this);" } })
						@Html.ValidationMessageFor(model => model.ItemDescripcion.ItemEstilo, "", new { @class = "text-danger" })
					</div>
					<div class="form-group col-sm-2">
						@Html.LabelFor(model => model.CatTipoFormPack.TipoFormPack, htmlAttributes: new { @class = "control-label " }) <br />
						@Html.DropDownList("listTipoFormPack", (SelectList)ViewBag.listTipoFormPack, string.Empty, new { @class = "form-control nuevo_item", @id = "selectFormPack", @name = "state", @style = "width: 60%;" })
						@Html.ValidationMessageFor(model => model.IdTipoFormPack, "", new { @class = "text-danger" })

					</div>
					<div class="form-group col-md-4">
						@Html.LabelFor(model => model.ItemDescripcion.Descripcion, htmlAttributes: new { @class = "control-label" })
						@Html.EditorFor(model => model.ItemDescripcion.Descripcion, new { htmlAttributes = new { @class = "form-control nuevo_item", @onkeyup = "InputToUpper(this);" } })
						@Html.ValidationMessageFor(model => model.ItemDescripcion.Descripcion, "", new { @class = "text-danger" })
					</div>
					<div class="form-group col-md-3">
						<br />
						<button type="button" class="btn btn-success" id="nuevoEstilo" data-toggle="modal">
							<span class="glyphicon glyphicon-plus-sign" aria-hidden="true"></span> Add Style
						</button>
					</div>
				</div>
			</div>
			<hr />
			<div class="container-fluid">
				<div class="form-row">
					<div class="form-group col-md-4">
						@Html.LabelFor(model => model.CatColores.CodigoColor, htmlAttributes: new { @class = "control-label" })
						@Html.EditorFor(model => model.CatColores.CodigoColor, new { htmlAttributes = new { @class = "form-control nuevo_item", @onkeyup = "InputToUpper(this);" } })
						@Html.ValidationMessageFor(model => model.CatColores.CodigoColor, "", new { @class = "text-danger" })

					</div>
					<div class="form-group col-md-4">
						@Html.LabelFor(model => model.CatColores.DescripcionColor, htmlAttributes: new { @class = "control-label" })
						@Html.EditorFor(model => model.CatColores.DescripcionColor, new { htmlAttributes = new { @class = "form-control nuevo_item", @onkeyup = "InputToUpper(this);" } })
						@Html.ValidationMessageFor(model => model.CatColores.DescripcionColor, "", new { @class = "text-danger" })
					</div>
					<div class="form-group col-md-4">
						<br />

						<button type="button" class="btn btn-success" id="nuevoColor" data-toggle="modal">
							<span class="glyphicon glyphicon-plus-sign" aria-hidden="true"></span> Add Color
						</button>

					</div>
				</div>
			</div>
			<hr />

			<div class="container-fluid">
				<div class="form-row">

					<div class="form-group col-sm-4">
						@Html.LabelFor(model => model.CantidadT, htmlAttributes: new { @class = "control-label" })
						@Html.EditorFor(model => model.CantidadT, new { htmlAttributes = new { @class = "form-control nuevo_item" } })
						@Html.ValidationMessageFor(model => model.CantidadT, "", new { @class = "text-danger" })
					</div>

					<div class="form-group col-sm-4">
						@Html.LabelFor(model => model.Precio, htmlAttributes: new { @class = "control-label" })
						@Html.EditorFor(model => model.Precio, new { htmlAttributes = new { @class = "form-control nuevo_item" } })
						@Html.ValidationMessageFor(model => model.Precio, "", new { @class = "text-danger" })

					</div>

					<div class="form-group col-sm-4">
						@Html.LabelFor(model => model.CatEspecialidades.Especialidad, htmlAttributes: new { @class = "control-label " }) <br />
						@Html.DropDownList("listEspecialidad", (SelectList)ViewBag.listEspecialidad, string.Empty, new { @class = "form-control nuevo_item", @id = "selectEspecialidad", @name = "state", @style = "width: 60%;" })
						@Html.ValidationMessageFor(model => model.IdEspecialidad, "", new { @class = "text-danger" })

					</div>

				</div>
			</div>
			<div class="container-fluid">
				<div class="form-row">
					<div class="form-group col-sm-4 estilo">
						@Html.LabelFor(model => model.IdGenero, htmlAttributes: new { @class = "control-label " }) <br />
						@Html.DropDownList("listGenero", (SelectList)ViewBag.listGenero, string.Empty, new { @class = "form-control nuevo_item", @id = "selectGenero", @name = "state", @style = "width: 60%;" })
						@Html.ValidationMessageFor(model => model.IdGenero, "", new { @class = "text-danger" })

					</div>
					<div class="form-group col-sm-4">
						@Html.LabelFor(model => model.IdTela, htmlAttributes: new { @class = "control-label " }) <br />
						@Html.DropDownList("listTela", (SelectList)ViewBag.listTela, string.Empty, new { @class = "form-control nuevo_item", @id = "selectTela", @name = "state", @style = "width: 60%;" })
						@Html.ValidationMessageFor(model => model.IdTela, "", new { @class = "text-danger" })
					</div>
					<div class="form-group col-sm-4">
						@Html.LabelFor(model => model.TipoCamiseta, htmlAttributes: new { @class = "control-label " }) <br />
						@Html.DropDownList("listTipoCamiseta", (SelectList)ViewBag.listTipoCamiseta, string.Empty, new { @class = "form-control nuevo_item", @id = "selectTipoCamiseta", @name = "state", @style = "width: 60%;" })
						@Html.ValidationMessageFor(model => model.TipoCamiseta, "", new { @class = "text-danger" })
					</div>

				</div>


			</div>
			<br />
			<br />
			<div class="container-fluid">
				<div class="form-group">
					<div class="panel-group">
						<div class="panel panel-title">
							<div class="panel-heading classTipoPack">Reception of type of packing</div>
							<div class="panel-body">
								<button type="button" id="btnAddPack" class="btn btn-xs btn-primary classAddPack">+ New Pack</button>
								<table class="table" id="tablaPack" style="margin:0px; padding:0px;">
									<thead>
										<tr>
											<th class="index"><span class="glyphicon glyphicon-fullscreen" aria-hidden="true" /></th>
											<th>Item Packing</th>
											<th></th>
										</tr>
									</thead>
									<tbody class="tbodyPack"></tbody>
								</table>
							</div>
						</div>
					</div>
					<br />
					<br />
					<div class="text-center margin-bottom col-sm-12">
						<button type="button" class="btn btn-success" id="nuevoItem" data-toggle="modal">
							<span class="glyphicon glyphicon-plus-sign" aria-hidden="true"></span> Save Item
						</button>
					</div>
				</div>
			</div>
		</div>

		<!--<div class="panel panel-primary" id="crearTipoPack">
			<div class="panel-heading">
				<h4>Reception of type of packing</h4>
			</div>

			<div class="container-fluid">
				<br />

				<button type="button" id="btnAddPack" class="btn btn-xs btn-primary classAddPack">+ New Pack</button>
				<table class="table" id="tablaPack">
					<thead>
						<tr>
							<th class="index"><span class="glyphicon glyphicon-fullscreen" aria-hidden="true" /></th>
							<th>Packing</th>
						</tr>
					</thead>
					<tbody class="tbodyPack"></tbody>
				</table>
				<button type="button" id="nuevoPack" class="btn btn-success btn-md pull-right btn-sm">Save Pack</button>
				<br />
				<br />
			</div>
		</div>-->

		<div class="panel panel-primary" id="crearTallas">
			<div class="panel-heading">
				<h4>Reception of sizes</h4>
			</div>

			<div class="container-fluid">
				<br />

				<button type="button" id="btnAdd" class="btn btn-xs btn-primary classAdd">+ New Size</button>
				<table class="table" id="tablaTallas">
					<thead>
						<tr>
							<th class="index"><span class="glyphicon glyphicon-fullscreen" aria-hidden="true" /></th>
							<th>Size</th>
							<th>Quantity</th>
							<th>Extra</th>
							<th>Examples</th>
						</tr>
					</thead>
					<tbody class="tbodyTallas"></tbody>
				</table>
				<button type="button" id="nuevaTalla" class="btn btn-success btn-md pull-right btn-sm">Save sizes</button>
				<br />
				<br />
			</div>
		</div>
		<br />
		<br />
		<br />

	</div>

	<script>
		Dropzone.options.dropzoneForm =
			{
				init: function () {
					this.on("complete", function (data) {
						//var res = eval('(' + data.xhr.responseText + ')');
						var res = JSON.parse(data.xhr.responseText);
					});
				}
			};

		//Desplazamiento
		$('.tbodyTallas').keydown(function (e) {
			var $table = $(this);
			var $active = $('input:focus,select:focus', $table);
			var $next = null;
			var focusableQuery = 'input:visible,select:visible,textarea:visible';
			var position = parseInt($active.closest('td').index()) + 1;
			console.log('position :', position);
			switch (e.keyCode) {
				case 37: // <Left>
					$next = $active.parent('td').prev().find(focusableQuery);
					break;
				case 38: // <Up>
					$next = $active
						.closest('tr')
						.prev()
						.find('td:nth-child(' + position + ')')
						.find(focusableQuery)
						;

					break;
				case 39: // <Right>
					$next = $active.closest('td').next().find(focusableQuery);
					break;
				case 40: // <Down>
					$next = $active
						.closest('tr')
						.next()
						.find('td:nth-child(' + position + ')')
						.find(focusableQuery)
						;
					break;
			}
			if ($next && $next.length) {
				$next.focus();
			}
		});

		$(document).ready(function () {
			$("#drop-container").on('dragenter', function (e) {
				e.preventDefault();
				$(this).css('border', '#39b311 2px dashed');
				$(this).css('background', '#f1ffef');
			});

			$("#drop-container").on('dragover', function (e) {
				e.preventDefault();
			});


			$("#drop-container").on('drop', function (e) {
				$(this).css('border', '#07c6f1 2px dashed');
				$(this).css('background', '#FFF');
				e.preventDefault();
				var image = e.originalEvent.dataTransfer.files;
				createFormData(image);
			});
		});

		function createFormData(image) {
			var formImage = new FormData();
			formImage.append('dropImage', image[0]);
			//var IdEstilo = $("#IdItems").val();
			//formData.append('IdEstilo', IdEstilo);
			uploadFormData(formImage);
		}

		function uploadFormData(formData) {
			$.ajax({
				url: "/Arte/UploadFiles",
				type: "POST",
				data: formData,
				contentType: false,
				cache: false,
				processData: false,
				success: function (response) {
					
					var imagePreview = $(".drop-image").clone();
					var path = '/Content/imagenesEstilos/' + response;
					imagePreview.attr("src", path);
					imagePreview.removeClass("drop-image");
					imagePreview.addClass("preview");
					$('#drop-container').append(imagePreview);
				}
			});
		}
	</script>

}



@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
}
